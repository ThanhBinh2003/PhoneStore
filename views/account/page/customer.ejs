<style>
  td button {
    margin: 5px 0;
  }
</style>
<div class="container-fluid">
  <div class="d-flex justify-content-between">
    <h4>Customer management</h4>
  </div>

  <table class="table table-striped">
    <thead>
      <tr>
        <th scope="col">No.</th>
        <!-- <th scope="col">Role</th> -->
        <!-- <th scope="col">Username</th> -->
        <th scope="col">Name</th>
        <!-- <th scope="col">Email</th> -->
        <th scope="col">Phone</th>
        <th scope="col">Address</th>
        <!-- <th scope="col">Avatar</th> -->
        <!-- <th scope="col">Status</th> -->
        <th scope="col">Created at</th>
        <th scope="col">Action</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>

  <!-- create -->
  <!-- <div
    class="modal fade"
    id="createUserModal"
    tabindex="-1"
    aria-labelledby="createUserModal"
    aria-hidden="true"
  >
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header d-flex justify-content-between">
          <h1 class="modal-title fs-5" id="createUserModal">Add new customer</h1>
          <button
            type="button"
            class="btn-close"
            data-bs-dismiss="modal"
            aria-label="Close"
          ></button>
        </div>
        <div class="modal-body">
          <form>
            <div class="mb-3">
              <label for="name" class="form-label">Fullname</label>
              <input
                required
                type="text"
                class="form-control"
                id="name"
                placeholder="Fullname"
              />
            </div>
            <div class="mb-3">
              <label for="email" class="form-label">Email</label>
              <input
                required
                type="email"
                class="form-control"
                id="email"
                placeholder="Email"
              />
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button
            type="button"
            class="btn btn-secondary"
            data-bs-dismiss="modal"
          >
            Cancel
          </button>
          <button type="button" class="btn btn-primary">Save</button>
        </div>
      </div>
    </div>
  </div> -->
</div>
<script>
  const render = (users) => {
    const tbody = document.querySelector("tbody")
    tbody.innerHTML = ""
    users.forEach((user, index) => {
      const tr = document.createElement("tr")
      tr.innerHTML = `
        <th scope="row">${index + 1}</th>  
        <td>${user.name}</td>
        <td>${user.phone}</td>
        <td>${user.address}</td>
        <td>${user.createdAt}</td>
      `
      // if (user.role == "staff") {
      //   let staffHtml = ""
      //   if (user.status == "banned") {
      //     staffHtml += `
      //       <td  class="col-1">
      //         <button class="btn btn-success btn-sm" onclick="bannedUser('${user.username}')">Active</button><br>
      //         <button class="btn btn-warning btn-sm" onclick="resendEmail('${user.email}', '${user.username}', '${user.name}')">Resend email</button><br>
      //         <a href="/order/seller-orders/${user.username}" class="btn btn-primary btn-sm">Detail sell</a>
      //       </td>
      //     `
      //   } else {
      //     staffHtml += `
      //       <td  class="col-1">
      //         <button class="btn btn-danger btn-sm" onclick="bannedUser('${user.username}')">Banned</button><br>
      //         <button class="btn btn-warning btn-sm" onclick="resendEmail('${user.email}', '${user.username}', '${user.name}')">Resend email</button><br>
      //         <a href="/order/seller-orders/${user.username}" class="btn btn-primary btn-sm">Detail sell</a>
      //       </td>
      //     `
      //   }
        // tr.innerHTML += staffHtml
      if (user.role == "customer") {
        tr.innerHTML += `
          <td  class="col-1">
            <a href="/order/customer-orders/${user.username}" class="btn btn-primary btn-sm">Detail buy</a><br>
        </td>
        `
      } 
      // else {
      //   tr.innerHTML += `
      //     <td  class="col-1">
      //       <a href="/order/seller-orders/${user.username}" class="btn btn-primary btn-sm">Detail sell</a><br>
      //     </td>
      //   `
      // }
      tbody.appendChild(tr)
    })
  }

  const init = async () => {
    try {
      const url = `${window.location.origin}/user?role=customer`
      const res = await fetch(url)
      const data = await res.json()
      render(data.data)
    } catch (error) {
      console.log(error)
    }
  }
  init()
  // const isValidEmail = (email) => {
  //   // Use a regular expression for basic email validation
  //   const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
  //   return emailRegex.test(email)
  // }

  const bannedUser = async (username) => {
    try {
      const res = await fetch(`${window.location.origin}/user/banned`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          username,
        }),
      })
      if (res.status === 200) {
        const data = await res.json()
        init()
      }
    } catch (error) {
      console.log(error)
    }
  }

  const resendEmail = async (email, username, name) => {
    try {
      const res = await fetch(
        `${window.location.origin}/user/resendverifyemail`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            email,
            username,
            name,
          }),
        }
      )
      if (res.status === 200) {
        const data = await res.json()
        alert("Resend email successfully")
      }
    } catch (error) {
      console.log(error)
    }
  }

  $(document).ready(function () {
    // create
    $("#createUserModal .btn-primary").click(async function () {
      const name = $("#createUserModal #name").val()
      const email = $("#createUserModal #email").val()
      if (!isValidEmail(email)) {
        // Display an error message or prevent the form submission
        alert("Email is invalid")
        return
      }

      try {
        const res = await fetch(`${window.location.origin}/user/addstaff`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            name,
            email,
          }),
        })
        if (res.status === 200) {
          const data = await res.json()
          console.log(data)
          $("#createUserModal").modal("hide")
          init()
        }
      } catch (error) {
        console.log(error)
      }
    })
  })
</script>
